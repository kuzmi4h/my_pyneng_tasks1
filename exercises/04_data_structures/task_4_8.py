#!/usr/bin/env python3.9
# -*- coding: utf-8 -*-
"""
Задание 4.8

Преобразовать IP-адрес в переменной ip в двоичный формат и вывести на стандартный
поток вывода вывод столбцами, таким образом:
- первой строкой должны идти десятичные значения байтов
- второй строкой двоичные значения

Вывод должен быть упорядочен также, как в примере:
- столбцами
- ширина столбца 10 символов (в двоичном формате
  надо добавить два пробела между столбцами
  для разделения октетов между собой)

Пример вывода для адреса 10.1.1.1:
10        1         1         1
00001010  00000001  00000001  00000001

Ограничение: Все задания надо выполнять используя только пройденные темы.

Предупреждение: в разделе 4 тесты можно легко "обмануть" сделав нужный вывод,
без получения результатов из исходных данных с помощью Python.
Это не значит, что задание сделано правильно, просто на данном этапе сложно иначе
проверять результат.
"""
"""
ip = "192.168.3.1"

# Преобразуем IP-адрес в список октетов
octets = ip.split(".")

# Преобразуем каждый октет в двоичную строку и добавим его в список
bin_octets = [bin(int(octet))[2:].zfill(8) for octet in octets]

# Выводим столбцами
print("{:<10}{:<10}{:<10}{:<10}".format(*octets))
print("{:<10}{:<10}{:<10}{:<10}".format(*bin_octets))

"""
'''
ip = "192.168.3.1"
ip = ip.split('.')
oct1 = int(ip [0])
oct2 = int(ip [1])
oct3 = int(ip [2])
oct4 = int(ip [3])
'''
'''
oct1b = bin(int(oct1))[2:]
oct2b = bin(int(oct2))[2:]
oct3b = bin(int(oct3))[2:]
oct4b = bin(int(oct4))[2:]
'''
"""
ip_template = '''
IP address:
{0:<10} {1:<10} {2:<10} {3:<10}
{0:010b} {1:010b} {2:010b} {3:010b}
'''

print(ip_template.format(oct1, oct2, oct3, oct4))

"""
ip = "192.168.3.1"
octets = ip.split('.')
binary_octets = [format(int(octet), '08b') for octet in octets]

print('{:<10}{:<10}{:<10}{:<10}'.format(*octets))
print('{:<10}{:<10}{:<10}{:<10}'.format(*binary_octets))

